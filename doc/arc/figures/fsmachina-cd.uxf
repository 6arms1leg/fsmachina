<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
// fontsize=14
fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>9</zoom_level>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>594</x>
      <y>450</y>
      <w>72</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
r1=me
m1=*
m2=1</panel_attributes>
    <additional_attributes>40.0;50.0;40.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>621</x>
      <y>414</y>
      <w>36</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>*IF2*
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>612</x>
      <y>432</y>
      <w>45</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;30.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>315</x>
      <y>135</y>
      <w>459</w>
      <h>207</h>
    </coordinates>
    <panel_attributes>*FSMachina framework interface (IF)*
--
Elements in grey are not part of the FSMachina framework (FW) and have to be provided by the user.  The IF consists of the following parts:

*IF0*
The FW provides an FSM object type (base class) to instantiate an FSM object.

*IF1*
The FW provides (UML) standard event types applicable to all states.  These predefined event types can be extended by the user.

*IF2*
The FW requires a pointer to an FSM object to operate on.
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>297</x>
      <y>54</y>
      <w>738</w>
      <h>747</h>
    </coordinates>
    <panel_attributes>cd FSMachina
/Core modules and supplements/
--
fontsize=30</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>693</x>
      <y>72</y>
      <w>63</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>UML 2.0
transparency=0
layer=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>774</x>
      <y>72</y>
      <w>198</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Synchronous, non-hierarchical, finite state machine (FSM)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>315</x>
      <y>360</y>
      <w>288</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>finiteStateMachine
--

--
+init(me:fsm_t*, p_statHndlr:p_statHndlr_t):void
+sendEvt(me:fsm_t*, uint8_t evt):bool
+getStat(me:fsm_t*):p_statHndlr_t
+trans(me:fsm_t*, p_statHndlr:p_statHndlr_t):void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>450</x>
      <y>504</y>
      <w>117</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Type&gt;&gt;
eventType
--
ENTRY=0
EXIT
APP_EVT_START</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>522</x>
      <y>468</y>
      <w>63</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>315</x>
      <y>720</y>
      <w>306</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Type&gt;&gt;
stateHandlerType
--
typedef bool (*p_statHndlr_t)(fsm_t* me, uint8_t evt);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>324</x>
      <y>468</y>
      <w>63</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;280.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>369</x>
      <y>612</y>
      <w>171</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Type&gt;&gt;
fsmBaseObjectType
--
typedef struct {
    p_statHndlr_t p_statHndlr;
} fsm_t;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>378</x>
      <y>468</y>
      <w>63</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;160.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>612</x>
      <y>495</y>
      <w>216</w>
      <h>198</h>
    </coordinates>
    <panel_attributes>stateHandler
--
-fsm:fsm_t
+p_fsm:fsm_t*=&amp;fsm
-extStatVar0
-extStatVar1
-...

--
+fsmCtor(void):void
-statInit(me:fsm_t*, evt:uint8_t):bool
+statA(me:fsm_t*, evt:uint8_t):bool
+statB(me:fsm_t*, evt:uint8_t):bool
+...
fg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>873</x>
      <y>531</y>
      <w>144</w>
      <h>207</h>
    </coordinates>
    <panel_attributes>activity
--

--
+statInitEntry(void):void
+statInitExit(void):void
+statAEntry(void):void
+statAExit(void):void
+statBEntry(void):void
+statBExit(void):void
+...
+trans0(void):void
+trans1(void):void
+...
fg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>675</x>
      <y>369</y>
      <w>162</w>
      <h>99</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Type&gt;&gt;
eventType
--
EVT0=APP_EVT_START
EVT1
...
fg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>747</x>
      <y>459</y>
      <w>63</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;use&gt;&gt;
fg=light_gray</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>855</x>
      <y>342</y>
      <w>144</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Type&gt;&gt;
fsmDerivedObjectType
--
typedef struct {
    fsm_t base;
    ... extStatVar0;
    ... extStatVar1;
} fsm_t;
fg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>819</x>
      <y>576</y>
      <w>72</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;use&gt;&gt;
fg=light_gray</panel_attributes>
    <additional_attributes>60.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>819</x>
      <y>459</y>
      <w>108</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;use&gt;&gt;
fg=light_gray</panel_attributes>
    <additional_attributes>60.0;10.0;60.0;60.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>558</x>
      <y>504</y>
      <w>72</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;20.0;60.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>531</x>
      <y>657</y>
      <w>99</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;20.0;90.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>558</x>
      <y>612</y>
      <w>36</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>*IF1*
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>567</x>
      <y>513</y>
      <w>54</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>40.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>639</x>
      <y>711</y>
      <w>36</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>*IF0*
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>567</x>
      <y>666</y>
      <w>90</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>792</x>
      <y>279</y>
      <w>144</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>(Optional) event type extension by the user
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>801</x>
      <y>315</y>
      <w>45</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;60.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>810</x>
      <y>216</y>
      <w>180</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>(Optional) derivation from FSM base class by the user
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>945</x>
      <y>252</y>
      <w>45</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>30.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>702</x>
      <y>711</y>
      <w>153</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>States are implemented as operations and have this function (pointer) signature
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>612</x>
      <y>738</y>
      <w>108</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>666</x>
      <y>684</y>
      <w>54</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;80.0</additional_attributes>
  </element>
</diagram>
